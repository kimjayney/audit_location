name: Daily D1 Insights → R2
on:
  schedule:
    - cron: '15 0 * * *'   # UTC 00:15 = 한국 09:15
jobs:
  export-upload:
    runs-on: ubuntu-latest

    # (A) 한 곳에서 매핑만 해두면 이후 스텝은 경고 없이 동작
    env:
      # ─ 기존 Secrets 그대로 사용 ───────────────
      CF_API_TOKEN:    ${{ secrets.CF_API_TOKEN }}
      CF_ACCOUNT_ID:   ${{ secrets.CF_ACCOUNT_ID }}

      # ─ 새 변수로 동시에 노출(우회) ───────────
      CLOUDFLARE_API_TOKEN:  ${{ secrets.CF_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      D1_DB_NAME:      ${{ secrets.D1_DB_NAME }}

    steps:
      - name: Install Wrangler
        run: npm i -g wrangler

      - name: Export last-31d insights
        run: |
          set -euo pipefail
          TODAY=$(date -u '+%Y-%m-%d')
          wrangler d1 insights "$D1_DB_NAME" \
            --json --timePeriod=31d \
            --account-id "$CLOUDFLARE_ACCOUNT_ID" \
            > "insights_${TODAY}.json"

      # 이후 업로드 스텝(예: R2/S3) 그대로…
