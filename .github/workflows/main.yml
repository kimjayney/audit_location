# .github/workflows/d1-insights-to-r2.yml
name: Daily D1 Insights → R2

on:
  schedule:
    - cron: '15 0 * * *'     # 매일 00:15 UTC = 한국 09:15
  workflow_dispatch:         # 필요 시 수동 실행

jobs:
  export_and_upload:
    runs-on: ubuntu-latest

    # ─────────────────── 환경변수 매핑 ───────────────────
    env:
      # 기존 Secrets 그대로
      CF_API_TOKEN:    ${{ secrets.CF_API_TOKEN }}
      CF_ACCOUNT_ID:   ${{ secrets.CF_ACCOUNT_ID }}

      # Wrangler v3+ 가 요구하는 새 이름으로 동시에 노출
      CLOUDFLARE_API_TOKEN:  ${{ secrets.CF_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      D1_DB_NAME: ${{ secrets.D1_DB_NAME }}

    steps:
      # 1) 필요 패키지 설치
      - name: Install Wrangler
        run: npm i -g wrangler@latest

      # 2) 31 일치 인사이트 JSON 추출
      - name: Export last-31 days insights
        run: |
          set -euo pipefail
          TODAY=$(date -u '+%Y-%m-%d')

          # 디버그용(앞 6자리만): 값이 들어왔는지 확인
          echo "ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}"
          echo "TOKEN_PREFIX=${CLOUDFLARE_API_TOKEN:0:6}******"

          npx -y wrangler@latest d1 insights "$D1_DB_NAME" \
            --account-id "$CLOUDFLARE_ACCOUNT_ID" \
            --json --timePeriod=31d \
            > "insights_${TODAY}.json"

      # 3) R2 버킷으로 업로드
      - name: Upload to R2
        uses: ryand56/r2-upload-action@v1.4
        with:
          r2-account-id:        ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id:     ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket:            ${{ secrets.R2_BUCKET }}     # 예: my-backup
          source-dir:           '.'                          # 현재 워크스페이스
          destination-dir:      'd1-insights/'               # R2 내부 경로
